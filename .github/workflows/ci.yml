name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Frontend Lint and Test
  frontend-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint
      continue-on-error: true

    - name: Run Vitest tests
      run: npm run test
      continue-on-error: true

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: frontend-test-results
        path: coverage/

  # Backend Test
  backend-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install dependencies
      run: cd server && npm ci

    - name: Run backend tests
      run: cd server && npm test
      env:
        NODE_ENV: test
        MONGODB_URI: ${{ secrets.MONGODB_TEST_URI || 'mongodb://localhost:27017/test' }}
      continue-on-error: true

  # Build Frontend
  build-frontend:
    runs-on: ubuntu-latest
    needs: [frontend-test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build frontend
      run: npm run build
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL || 'https://mubarakway-backend.onrender.com/api' }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-dist
        path: dist/
        retention-days: 7

  # Security Audit
  security-audit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Run npm audit (Frontend)
      run: npm audit --audit-level=moderate
      continue-on-error: true

    - name: Run npm audit (Backend)
      run: cd server && npm audit --audit-level=moderate
      continue-on-error: true

  # Deploy to Render (only on main branch push)
  deploy-production:
    runs-on: ubuntu-latest
    needs: [build-frontend, backend-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Trigger Render Deploy
      env:
        RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}
      run: |
        if [ -n "$RENDER_DEPLOY_HOOK" ]; then
          curl -X POST "$RENDER_DEPLOY_HOOK"
          echo "✅ Render deploy triggered"
        else
          echo "⚠️ RENDER_DEPLOY_HOOK not configured"
        fi

    - name: Wait for deployment
      run: sleep 60

    - name: Health check
      run: |
        curl --fail https://mubarakway-backend.onrender.com/api/health || exit 1
        echo "✅ Backend health check passed"

  # Notification
  notify:
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: always() && github.ref == 'refs/heads/main'

    steps:
    - name: Send notification
      run: |
        echo "Deployment completed for commit: ${{ github.sha }}"
        echo "Status: ${{ needs.deploy-production.result }}"
